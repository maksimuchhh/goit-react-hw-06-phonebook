{"version":3,"sources":["App.module.css","redux/contactsActions.js","redux/contactsReducer.js","redux/store.js","components/Section/index.jsx","components/Form/Input/index.jsx","components/Form/Button/index.jsx","components/Form/index.js","components/List/index.jsx","App.js","index.js"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","filter","createReducer","actions","_","payload","items","state","id","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","itemsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Section","children","title","Input","this","props","name","changeInputForFilter","changeInput","value","isOpen","arr","splice","toUpperCase","CSSTransition","in","timeout","classNames","unmountOnExit","htmlFor","onChange","type","Component","Button","text","onClick","Form","number","evt","setState","prevState","target","onSubmit","List","length","contact","toLowerCase","includes","TransitionGroup","component","map","el","App","error","preventDefault","uuidv4","undefined","find","setTimeout","className","styles","container","appear","connect","dispatch","e","contactsActions","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9483d233.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"error\":\"App_error__1umzI\",\"appear\":\"App_appear__3r9lb\",\"appearActive\":\"App_appearActive__1uccQ\",\"enter\":\"App_enter__2d_oE\",\"enterActive\":\"App_enterActive__3Z_zS\",\"exit\":\"App_exit__qu2sb\",\"exitActive\":\"App_exitActive__3R2-x\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contacts/add\");\n\nconst deleteContact = createAction(\"contacts/delete\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contactsActions\";\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contactsReducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst itemsPersistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(itemsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ children, title }) => {\n  return (\n    <>\n      {title && <h2>{title}</h2>}\n      <section>{children}</section>\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./Filter.css\";\n\nexport class Input extends Component {\n  render() {\n    const {\n      name,\n      changeInputForFilter,\n      changeInput,\n      value,\n      isOpen,\n    } = this.props;\n    const arr = [...name];\n    arr.splice(0, 1, arr[0].toUpperCase());\n    if (name === \"filter\") {\n      return (\n        <>\n          <CSSTransition\n            in={isOpen}\n            timeout={250}\n            classNames=\"label\"\n            unmountOnExit\n          >\n            <label htmlFor={name}>{arr}</label>\n          </CSSTransition>\n          <CSSTransition\n            in={isOpen}\n            timeout={250}\n            classNames=\"form\"\n            unmountOnExit\n          >\n            <input\n              onChange={name === \"filter\" ? changeInputForFilter : changeInput}\n              type=\"text\"\n              id={name}\n              value={value}\n            />\n          </CSSTransition>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <label htmlFor={name}>{arr}</label>\n          <input onChange={changeInput} type=\"text\" id={name} value={value} />\n        </>\n      );\n    }\n  }\n}\n\nexport default Input;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ text, deleteContact, id }) => {\n  return (\n    <>\n      <button\n        id={deleteContact ? id : null}\n        onClick={deleteContact ? () => deleteContact(id) : null}\n        type=\"submit\"\n      >\n        {text}\n      </button>\n    </>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  changeInput = (evt) => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        [evt.target.id]: evt.target.value,\n      };\n    });\n  };\n  render() {\n    const { addContact } = this.props;\n    return (\n      <form\n        onSubmit={(evt) => {\n          this.setState({ name: \"\", number: \"\" });\n          return addContact(evt, this.state);\n        }}\n      >\n        <Input\n          name=\"name\"\n          changeInput={this.changeInput}\n          value={this.state.name}\n        />\n        <Input\n          name=\"number\"\n          changeInput={this.changeInput}\n          value={this.state.number}\n        />\n        <Button state={this.state} text=\"Add contact\" addContact={addContact} />\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Form/Button\";\nimport \"./List.css\";\nimport { connect } from \"react-redux\";\n\nconst List = ({ contacts, filter, deleteContact }) => {\n  if (filter.length > 0) {\n    contacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n  return (\n    <TransitionGroup component=\"ul\">\n      {contacts.map((el) => {\n        return (\n          <CSSTransition key={el.id} timeout={250} classNames=\"item\">\n            <li>\n              <span>{el.name}</span>: <span>{el.number} </span>\n              <Button deleteContact={deleteContact} text=\"Delete\" id={el.id} />\n            </li>\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section\";\nimport Input from \"./components/Form/Input\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport { CSSTransition } from \"react-transition-group\";\nimport styles from \"./App.module.css\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport contactsActions from \"./redux/contactsActions\";\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    error: null,\n  };\n\n  addContact = (evt, state) => {\n    evt.preventDefault();\n    const id = uuidv4();\n    const name = state.name;\n    const number = state.number;\n    if (!name) return;\n    const dublicated = this.props.contacts.find((el) => {\n      return el.name === name;\n    });\n    if (!(dublicated === undefined)) {\n      this.setState({ error: `You already add ${name}` });\n      setTimeout(() => {\n        this.setState({ error: null });\n      }, 5000);\n      return;\n    } else {\n      this.props.addContact({\n        id: id,\n        name: name,\n        number: number,\n      });\n    }\n  };\n  render() {\n    return (\n      <div className={styles.container}>\n        <CSSTransition\n          in={this.state.error !== null}\n          timeout={300}\n          classNames={styles}\n          unmountOnExit\n        >\n          <div className={styles.error}>{this.state.error}</div>\n        </CSSTransition>\n\n        <CSSTransition\n          in={true}\n          timeout={500}\n          appear={true}\n          classNames={styles}\n          unmountOnExit\n        >\n          <h1>Phonebook</h1>\n        </CSSTransition>\n        <Form addContact={this.addContact} />\n        {this.props.contacts.length > 0 && (\n          <Section title=\"Contacts\">\n            <Input\n              name=\"filter\"\n              isOpen={this.props.contacts.length > 1}\n              changeInputForFilter={this.props.changeFilter}\n            />\n\n            <List\n              contacts={this.props.contacts}\n              filter={this.props.filter}\n              deleteContact={this.props.deleteContact}\n            />\n          </Section>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filter: state.contacts.filter,\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeFilter: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\n  addContact: (contact) => dispatch(contactsActions.addContact(contact)),\n  deleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}