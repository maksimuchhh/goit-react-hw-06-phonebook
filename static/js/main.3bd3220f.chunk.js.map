{"version":3,"sources":["App.module.css","components/Form/Form.module.css","redux/contactsActions.js","redux/contactsReducer.js","redux/store.js","components/Section/index.jsx","components/Form/Input/index.jsx","components/Form/Button/index.jsx","components/Form/index.js","components/List/index.jsx","redux/contactsOperations.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","filter","createReducer","_","payload","items","state","id","loading","combineReducers","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Section","children","title","Input","this","props","name","changeInputForFilter","changeInput","value","isOpen","arr","splice","toUpperCase","CSSTransition","in","timeout","classNames","unmountOnExit","htmlFor","onChange","type","Component","Button","text","deleteContact","onClick","Form","number","evt","setState","prevState","target","addContact","className","styles","form","onSubmit","List","length","contact","toLowerCase","includes","TransitionGroup","component","map","el","axios","defaults","baseURL","dispatch","get","then","data","catch","error","post","delete","App","errorText","preventDefault","uuidv4","setTimeout","undefined","find","a","fetchContacts","container","appear","connect","contactsOperations","e","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bd3220f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__-GfWs\",\"container\":\"App_container__1MQN3\",\"error\":\"App_error__1umzI\",\"appear\":\"App_appear__3r9lb\",\"appearActive\":\"App_appearActive__1uccQ\",\"enter\":\"App_enter__2d_oE\",\"enterActive\":\"App_enterActive__3Z_zS\",\"exit\":\"App_exit__qu2sb\",\"exitActive\":\"App_exitActive__3R2-x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const addContactRequest = createAction(\"contacts/addRequest\");\nexport const addContactSuccess = createAction(\"contacts/addSuccess\");\nexport const addContactError = createAction(\"contacts/addError\");\n\nexport const deleteContactRequest = createAction(\"contacts/deleteRequest\");\nexport const deleteContactSuccess = createAction(\"contacts/deleteSuccess\");\nexport const deleteContactError = createAction(\"contacts/deleteError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from \"./contactsActions\";\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [addContactRequest]: () => true,\n  [deleteContactRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contactsReducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ children, title }) => {\n  return (\n    <>\n      {title && <h2>{title}</h2>}\n      <section>{children}</section>\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./Filter.css\";\n\nexport class Input extends Component {\n  render() {\n    const {\n      name,\n      changeInputForFilter,\n      changeInput,\n      value,\n      isOpen,\n    } = this.props;\n    const arr = [...name];\n    arr.splice(0, 1, arr[0].toUpperCase());\n    if (name === \"filter\") {\n      return (\n        <>\n          <CSSTransition\n            in={isOpen}\n            timeout={250}\n            classNames=\"label\"\n            unmountOnExit\n          >\n            <label htmlFor={name}>{arr}</label>\n          </CSSTransition>\n          <CSSTransition\n            in={isOpen}\n            timeout={250}\n            classNames=\"form\"\n            unmountOnExit\n          >\n            <input\n              onChange={name === \"filter\" ? changeInputForFilter : changeInput}\n              type=\"text\"\n              id={name}\n              value={value}\n            />\n          </CSSTransition>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <label htmlFor={name}>{arr}</label>\n          <input onChange={changeInput} type=\"text\" id={name} value={value} />\n        </>\n      );\n    }\n  }\n}\n\nexport default Input;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ text, deleteContact, id }) => {\n  return (\n    <>\n      <button\n        id={deleteContact ? id : null}\n        onClick={deleteContact ? () => deleteContact(id) : null}\n        type=\"submit\"\n      >\n        {text}\n      </button>\n    </>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default Button;\n","import React, { Component } from \"react\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport styles from \"./Form.module.css\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  changeInput = (evt) => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        [evt.target.id]: evt.target.value,\n      };\n    });\n  };\n  render() {\n    const { addContact } = this.props;\n    return (\n      <form\n        className={styles.form}\n        onSubmit={(evt) => {\n          this.setState({ name: \"\", number: \"\" });\n          return addContact(evt, this.state);\n        }}\n      >\n        <Input\n          name=\"name\"\n          changeInput={this.changeInput}\n          value={this.state.name}\n        />\n        <Input\n          name=\"number\"\n          changeInput={this.changeInput}\n          value={this.state.number}\n        />\n        <Button state={this.state} text=\"Add contact\" addContact={addContact} />\n      </form>\n    );\n  }\n}\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport PropTypes from \"prop-types\";\nimport Button from \"../Form/Button\";\nimport \"./List.css\";\n\nconst List = ({ contacts, filter, deleteContact }) => {\n  if (filter.length > 0) {\n    contacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n  return (\n    <TransitionGroup component=\"ul\">\n      {contacts.map((el) => {\n        return (\n          <CSSTransition key={el.id} timeout={250} classNames=\"item\">\n            <li>\n              <span>{el.name}</span>: <span>{el.number} </span>\n              <Button deleteContact={deleteContact} text=\"Delete\" id={el.id} />\n            </li>\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n};\n\nexport default List;\n","import axios from \"axios\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./contactsActions\";\n\naxios.defaults.baseURL = \"http://localhost:3000/contacts\";\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get()\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch((error) => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = (contact) => (dispatch) => {\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import React, { Component } from \"react\";\nimport \"./normalize.css\";\nimport Section from \"./components/Section\";\nimport Input from \"./components/Form/Input\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport { CSSTransition } from \"react-transition-group\";\nimport styles from \"./App.module.css\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { changeFilter } from \"./redux/contactsActions\";\nimport contactsOperations from \"./redux/contactsOperations\";\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n    error: false,\n    errorText: null,\n  };\n\n  async componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  addContact = (evt, state) => {\n    evt.preventDefault();\n    const id = uuidv4();\n    const name = state.name;\n    const number = state.number;\n    if ((number.length || name.length) === 0) {\n      this.setState({ errorText: `Enter all empties`, error: true });\n      setTimeout(() => {\n        this.setState({ error: false });\n      }, 5000);\n      return;\n    }\n    const dublicated = this.props.contacts.find((el) => {\n      return el.name === name;\n    });\n    if (!(dublicated === undefined)) {\n      this.setState({ errorText: `You already add ${name}`, error: true });\n      setTimeout(() => {\n        this.setState({ error: false });\n      }, 5000);\n      return;\n    } else {\n      this.props.addContact({\n        id: id,\n        name: name,\n        number: number,\n      });\n    }\n  };\n  render() {\n    return (\n      <div className={styles.container}>\n        <CSSTransition\n          in={this.state.error !== false}\n          timeout={300}\n          classNames={styles}\n          unmountOnExit\n        >\n          <div className={styles.error}>{this.state.errorText}</div>\n        </CSSTransition>\n\n        <CSSTransition\n          in={true}\n          timeout={500}\n          appear={true}\n          classNames={styles}\n          unmountOnExit\n        >\n          <h1 className={styles.title}>Phonebook</h1>\n        </CSSTransition>\n        <Form addContact={this.addContact} />\n        {this.props.contacts.length > 0 && (\n          <Section title=\"Contacts\">\n            <Input\n              name=\"filter\"\n              isOpen={this.props.contacts.length > 1}\n              changeInputForFilter={this.props.changeFilter}\n            />\n\n            <List\n              contacts={this.props.contacts}\n              filter={this.props.filter}\n              deleteContact={this.props.deleteContact}\n            />\n          </Section>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  filter: state.contacts.filter,\n  contacts: state.contacts.items,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n  changeFilter: (e) => dispatch(changeFilter(e.target.value)),\n  addContact: (contact) => dispatch(contactsOperations.addContact(contact)),\n  deleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}