{"version":3,"sources":["components/views/Register/index.js"],"names":["styles","container","textAlign","form","width","label","display","flexDirection","marginBottom","mapDispatchToProps","onRegister","authOperations","register","connect","useState","name","setName","email","setEmail","password","setPassword","style","onSubmit","e","preventDefault","autoComplete","type","value","onChange","target"],"mappings":"iMAIMA,EAAS,CACbC,UAAW,CACTC,UAAW,kBAEbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KA8DZC,EAAqB,CACzBC,WAAYC,IAAeC,UAGdC,sBAAQ,KAAMJ,EAAdI,EA9DM,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,WAAiB,EACfI,mBAAS,IADM,mBAChCC,EADgC,KAC1BC,EAD0B,OAEbF,mBAAS,IAFI,mBAEhCG,EAFgC,KAEzBC,EAFyB,OAGPJ,mBAAS,IAHF,mBAGhCK,EAHgC,KAGtBC,EAHsB,KAiBvC,OACE,sBAAKC,MAAOrB,EAAOC,UAAnB,UACE,8CAEA,uBAAMqB,SAVW,SAACC,GACpBA,EAAEC,iBACFd,EAAW,CAAEK,OAAME,QAAOE,aAP1BH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAaoBC,MAAOrB,EAAOG,KAAMsB,aAAa,MAA/D,UACE,wBAAOJ,MAAOrB,EAAOK,MAArB,iBAEE,uBACEqB,KAAK,OACLX,KAAK,OACLY,MAAOZ,EACPa,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBb,EAAQa,EAAOF,aAI7C,wBAAON,MAAOrB,EAAOK,MAArB,iBAEE,uBACEqB,KAAK,QACLX,KAAK,QACLY,MAAOV,EACPW,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBX,EAASW,EAAOF,aAI9C,wBAAON,MAAOrB,EAAOK,MAArB,qBAEE,uBACEqB,KAAK,WACLX,KAAK,WACLY,MAAOR,EACPS,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBT,EAAYS,EAAOF,aAIjD,wBAAQD,KAAK,SAAb","file":"static/js/6.91fb9934.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport authOperations from \"../../../redux/auth/authOperations\";\n\nconst styles = {\n  container: {\n    textAlign: \"-webkit-center\",\n  },\n  form: {\n    width: 320,\n  },\n  label: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 15,\n  },\n};\n\nconst RegisterView = ({ onRegister }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const resetState = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onRegister({ name, email, password });\n    resetState();\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1>Registration</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={({ target }) => setName(target.value)}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={({ target }) => setEmail(target.value)}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </label>\n\n        <button type=\"submit\">Sign up</button>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}