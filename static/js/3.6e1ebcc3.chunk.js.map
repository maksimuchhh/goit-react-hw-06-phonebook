{"version":3,"sources":["components/views/Contacts/Contacts.module.css","components/Form/Form.module.css","components/Section/index.jsx","components/Form/Input/index.jsx","components/Form/Button/index.jsx","components/Form/index.js","components/List/index.jsx","redux/contacts/contactsOperations.js","redux/contacts/contactSelectors.js","components/views/Contacts/index.js"],"names":["module","exports","Section","children","title","Input","name","changeInputForFilter","changeInput","value","isOpen","upperName","splice","toUpperCase","CSSTransition","in","timeout","classNames","unmountOnExit","htmlFor","onChange","type","id","Button","text","deleteContact","onClick","Form","addContact","useState","setName","number","setNumber","className","styles","form","onSubmit","evt","target","List","contacts","filter","length","contact","toLowerCase","includes","TransitionGroup","component","map","el","axios","defaults","baseURL","dispatch","fetchContactsRequest","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","addContactRequest","post","addContactSuccess","addContactError","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getFilter","state","getContacts","items","Contacts","fetchContacts","changeFilter","setError","errorText","setErrorText","useEffect","container","appear","preventDefault","setState","setTimeout","undefined","find","connect","contactsOperations","e"],"mappings":"yJACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,MAAQ,wBAAwB,OAAS,yBAAyB,aAAe,+BAA+B,MAAQ,wBAAwB,YAAc,8BAA8B,KAAO,uBAAuB,WAAa,+B,0CCAzRD,EAAOC,QAAU,CAAC,KAAO,qB,mMCeVC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,qCACGA,GAAS,6BAAKA,IACf,kCAAUD,Q,QC0CDE,G,OA7CM,SAAC,GAMf,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,qBACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,MACAC,EACI,EADJA,OAEMC,EAAS,YAAOL,GAEtB,OADAK,EAAUC,OAAO,EAAG,EAAGD,EAAU,GAAGE,eACvB,WAATP,EAEA,qCACE,cAACQ,EAAA,EAAD,CACEC,GAAIL,EACJM,QAAS,IACTC,WAAW,QACXC,eAAa,EAJf,SAME,uBAAOC,QAASb,EAAhB,SAAuBK,MAEzB,cAACG,EAAA,EAAD,CACEC,GAAIL,EACJM,QAAS,IACTC,WAAW,OACXC,eAAa,EAJf,SAME,uBACEE,SAAmB,WAATd,EAAoBC,EAAuBC,EACrDa,KAAK,OACLC,GAAIhB,EACJG,MAAOA,SAOb,qCACE,uBAAOU,QAASb,EAAhB,SAAuBK,IACvB,uBAAOS,SAAUZ,EAAaa,KAAK,OAAOC,GAAIhB,EAAMG,MAAOA,SCtBpDc,EAlBA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,cAAeH,EAAS,EAATA,GACrC,OACE,mCACE,wBACEA,GAAIG,EAAgBH,EAAK,KACzBI,QAASD,EAAgB,kBAAMA,EAAcH,IAAM,KACnDD,KAAK,SAHP,SAKGG,O,kBCNM,SAASG,EAAT,GAA+B,IAAfC,EAAc,EAAdA,WAAc,EACnBC,mBAAS,IADU,mBACpCvB,EADoC,KAC9BwB,EAD8B,OAEfD,mBAAS,IAFM,mBAEpCE,EAFoC,KAE5BC,EAF4B,KAS3C,OACE,uBACEC,UAAWC,IAAOC,KAClBC,SAAU,SAACC,GACTT,EAAWS,EAAK,CAAE/B,OAAMyB,WAR5BD,EAAQ,IACRE,EAAU,KAIV,UAOE,cAAC,EAAD,CACE1B,KAAK,OACLE,YAAa,gBAAG8B,EAAH,EAAGA,OAAH,OAAgBR,EAAQQ,EAAO7B,QAC5CA,MAAOH,IAET,cAAC,EAAD,CACEA,KAAK,SACLE,YAAa,gBAAG8B,EAAH,EAAGA,OAAH,OAAgBN,EAAUM,EAAO7B,QAC9CA,MAAOsB,IAET,cAAC,EAAD,CAAQP,KAAK,mB,aCLJe,G,OAtBF,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,OAAQhB,EAAoB,EAApBA,cAMhC,OALIgB,EAAOC,OAAS,IAClBF,EAAWA,EAASC,QAAO,SAACE,GAAD,OACzBA,EAAQrC,KAAKsC,cAAcC,SAASJ,EAAOG,mBAI7C,cAACE,EAAA,EAAD,CAAiBC,UAAU,KAA3B,SACGP,EAASQ,KAAI,SAACC,GACb,OACE,cAACnC,EAAA,EAAD,CAA2BE,QAAS,IAAKC,WAAW,OAApD,SACE,+BACE,+BAAOgC,EAAG3C,OADZ,KAC0B,iCAAO2C,EAAGlB,OAAV,OACxB,cAAC,EAAD,CAAQN,cAAeA,EAAeD,KAAK,SAASF,GAAI2B,EAAG3B,SAH3C2B,EAAG3B,W,kCCFjC4B,IAAMC,SAASC,QAAU,2CAEzB,IA2Be,EA3BO,kBAAM,SAACC,GAC3BA,EAASC,eAETJ,IACGK,IAAI,aACJC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAASK,YAAqBD,OACjDE,OAAM,SAACC,GAAD,OAAWP,EAASQ,YAAmBD,SAqBnC,EAlBI,SAACjB,GAAD,OAAa,SAACU,GAC/BA,EAASS,eAETZ,IACGa,KAAK,YAAapB,GAClBa,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAASW,YAAkBP,OAC9CE,OAAM,SAACC,GAAD,OAAWP,EAASY,YAAgBL,SAYhC,EATO,SAACtC,GAAD,OAAQ,SAAC+B,GAC7BA,EAASa,eAEThB,IACGiB,OADH,mBACsB7C,IACnBkC,MAAK,kBAAMH,EAASe,YAAqB9C,OACzCqC,OAAM,SAACC,GAAD,OAAWP,EAASgB,YAAmBT,SCvCrCU,EAAY,SAACC,GAAD,OAAWA,EAAM/B,SAASC,QACtC+B,EAAc,SAACD,GAAD,OAAWA,EAAM/B,SAASiC,O,SCgBxCC,EAAW,SAAC,GAOlB,IANLjC,EAMI,EANJA,OACAD,EAKI,EALJA,SACAmC,EAII,EAJJA,cACAC,EAGI,EAHJA,aACAhD,EAEI,EAFJA,WACAH,EACI,EADJA,cACI,EACsBI,oBAAS,GAD/B,mBACG+B,EADH,KACUiB,EADV,OAE8BhD,mBAAS,MAFvC,mBAEGiD,EAFH,KAEcC,EAFd,KASJC,qBAAU,WACRL,MACC,IA2BH,OACE,sBAAK1C,UAAWC,IAAO+C,UAAvB,UACE,cAACnE,EAAA,EAAD,CACEC,IAAc,IAAV6C,EACJ5C,QAAS,IACTC,WAAYiB,IACZhB,eAAa,EAJf,SAME,qBAAKe,UAAWC,IAAO0B,MAAvB,SAA+BkB,MAEjC,cAAChE,EAAA,EAAD,CACEC,IAAI,EACJC,QAAS,IACTkE,QAAQ,EACRjE,WAAYiB,IACZhB,eAAa,EALf,SAOE,oBAAIe,UAAWC,IAAO9B,MAAtB,yBAEF,cAACuB,EAAD,CAAMC,WA5Ce,SAACS,EAAD,GAA4B,IAThCb,EASYlB,EAAmB,EAAnBA,KAAMyB,EAAa,EAAbA,OAErC,OADAM,EAAI8C,iBACmC,KAAlCpD,EAAOW,QAAUpC,EAAKoC,SACzB,EAAK0C,SAAS,CAAEN,UAAU,oBAAsBlB,OAAO,SACvDyB,YAAW,WACT,EAAKD,SAAS,CAAExB,OAAO,MACtB,WAMgB0B,IAHF9C,EAAS+C,MAAK,SAACtC,GAChC,OAAOA,EAAG3C,OAASA,MAnBFkB,EAsBL,mBAAD,OAAoBlB,GArBjCuE,GAqByC,GApBzCE,EAAavD,QAqBX6D,YAAW,WACTR,GAAS,KACR,WAGHjD,EAAW,CACTtB,OACAyB,cAwBF,cAACjB,EAAA,EAAD,CACEC,GAAIyB,EAASE,OAAS,EACtB1B,QAAS,IACTC,WAAW,UACXC,eAAa,EAJf,SAME,eAAC,EAAD,CAASd,MAAM,WAAf,UACE,cAAC,EAAD,CACEE,KAAK,SACLI,OAAQ8B,EAASE,OAAS,EAC1BnC,qBAAsBqE,IAGxB,cAAC,EAAD,CACEpC,SAAUA,EACVC,OAAQA,EACRhB,cAAeA,aAoBZ+D,uBAZS,SAACjB,GAAD,MAAY,CAClC9B,OAAQ6B,EAAUC,GAClB/B,SAAUgC,EAAYD,OAGG,SAAClB,GAAD,MAAe,CACxCsB,cAAe,kBAAMtB,EAASoC,MAC9Bb,aAAc,SAACc,GAAD,OAAOrC,EAASuB,YAAac,EAAEpD,OAAO7B,SACpDmB,WAAY,SAACe,GAAD,OAAaU,EAASoC,EAA8B9C,KAChElB,cAAe,SAACH,GAAD,OAAQ+B,EAASoC,EAAiCnE,QAGpDkE,CAA6Cd","file":"static/js/3.6e1ebcc3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__vO59W\",\"error\":\"Contacts_error__29P0H\",\"appear\":\"Contacts_appear__ZQCDL\",\"appearActive\":\"Contacts_appearActive__AcIrF\",\"enter\":\"Contacts_enter__Z5mII\",\"enterActive\":\"Contacts_enterActive__ScSZJ\",\"exit\":\"Contacts_exit__3aKHp\",\"exitActive\":\"Contacts_exitActive__kwxlQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ children, title }) => {\n  return (\n    <>\n      {title && <h2>{title}</h2>}\n      <section>{children}</section>\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./Filter.css\";\n\nexport const Input = ({\n  name,\n  changeInputForFilter,\n  changeInput,\n  value,\n  isOpen,\n}) => {\n  const upperName = [...name];\n  upperName.splice(0, 1, upperName[0].toUpperCase());\n  if (name === \"filter\") {\n    return (\n      <>\n        <CSSTransition\n          in={isOpen}\n          timeout={250}\n          classNames=\"label\"\n          unmountOnExit\n        >\n          <label htmlFor={name}>{upperName}</label>\n        </CSSTransition>\n        <CSSTransition\n          in={isOpen}\n          timeout={250}\n          classNames=\"form\"\n          unmountOnExit\n        >\n          <input\n            onChange={name === \"filter\" ? changeInputForFilter : changeInput}\n            type=\"text\"\n            id={name}\n            value={value}\n          />\n        </CSSTransition>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <label htmlFor={name}>{upperName}</label>\n        <input onChange={changeInput} type=\"text\" id={name} value={value} />\n      </>\n    );\n  }\n};\n\nexport default Input;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ text, deleteContact, id }) => {\n  return (\n    <>\n      <button\n        id={deleteContact ? id : null}\n        onClick={deleteContact ? () => deleteContact(id) : null}\n        type=\"submit\"\n      >\n        {text}\n      </button>\n    </>\n  );\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport Input from \"./Input\";\nimport Button from \"./Button\";\nimport styles from \"./Form.module.css\";\n\nexport default function Form({ addContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const resetState = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form\n      className={styles.form}\n      onSubmit={(evt) => {\n        addContact(evt, { name, number });\n        resetState();\n      }}\n    >\n      <Input\n        name=\"name\"\n        changeInput={({ target }) => setName(target.value)}\n        value={name}\n      />\n      <Input\n        name=\"number\"\n        changeInput={({ target }) => setNumber(target.value)}\n        value={number}\n      />\n      <Button text=\"Add contact\" />\n    </form>\n  );\n}\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Button from \"../Form/Button\";\nimport \"./List.css\";\n\nconst List = ({ contacts, filter, deleteContact }) => {\n  if (filter.length > 0) {\n    contacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n  return (\n    <TransitionGroup component=\"ul\">\n      {contacts.map((el) => {\n        return (\n          <CSSTransition key={el.id} timeout={250} classNames=\"item\">\n            <li>\n              <span>{el.name}</span>: <span>{el.number} </span>\n              <Button deleteContact={deleteContact} text=\"Delete\" id={el.id} />\n            </li>\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n};\n\nexport default List;\n","import axios from \"axios\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from \"./contactsActions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch((error) => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = (contact) => (dispatch) => {\n  dispatch(addContactRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nconst deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`contacts/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","export const getFilter = (state) => state.contacts.filter;\nexport const getContacts = (state) => state.contacts.items;\n","import { useState, useEffect } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport \"./normalize.css\";\nimport styles from \"./Contacts.module.css\";\nimport Section from \"../../Section\";\nimport Input from \"../../Form/Input\";\nimport Form from \"../../Form\";\nimport List from \"../../List\";\nimport \"./sectionAnimation.css\";\nimport { changeFilter } from \"../../../redux/contacts/contactsActions\";\nimport contactsOperations from \"../../../redux/contacts/contactsOperations\";\nimport {\n  getFilter,\n  getContacts,\n} from \"../../../redux/contacts/contactSelectors\";\n\nexport const Contacts = ({\n  filter,\n  contacts,\n  fetchContacts,\n  changeFilter,\n  addContact,\n  deleteContact,\n}) => {\n  const [error, setError] = useState(false);\n  const [errorText, setErrorText] = useState(null);\n\n  const changeError = (text, bool) => {\n    setError(bool);\n    setErrorText(text);\n  };\n\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n\n  const handleAddContact = (evt, { name, number }) => {\n    evt.preventDefault();\n    if ((number.length || name.length) === 0) {\n      this.setState({ errorText: `Enter all empties`, error: true });\n      setTimeout(() => {\n        this.setState({ error: false });\n      }, 5000);\n      return;\n    }\n    const dublicated = contacts.find((el) => {\n      return el.name === name;\n    });\n    if (!(dublicated === undefined)) {\n      changeError(`You already add ${name}`, true);\n      setTimeout(() => {\n        setError(false);\n      }, 5000);\n      return;\n    } else {\n      addContact({\n        name,\n        number,\n      });\n    }\n  };\n  return (\n    <div className={styles.container}>\n      <CSSTransition\n        in={error !== false}\n        timeout={300}\n        classNames={styles}\n        unmountOnExit\n      >\n        <div className={styles.error}>{errorText}</div>\n      </CSSTransition>\n      <CSSTransition\n        in={true}\n        timeout={500}\n        appear={true}\n        classNames={styles}\n        unmountOnExit\n      >\n        <h1 className={styles.title}>Phonebook</h1>\n      </CSSTransition>\n      <Form addContact={handleAddContact} />\n      <CSSTransition\n        in={contacts.length > 0}\n        timeout={250}\n        classNames=\"section\"\n        unmountOnExit\n      >\n        <Section title=\"Contacts\">\n          <Input\n            name=\"filter\"\n            isOpen={contacts.length > 1}\n            changeInputForFilter={changeFilter}\n          />\n\n          <List\n            contacts={contacts}\n            filter={filter}\n            deleteContact={deleteContact}\n          />\n        </Section>\n      </CSSTransition>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  filter: getFilter(state),\n  contacts: getContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n  changeFilter: (e) => dispatch(changeFilter(e.target.value)),\n  addContact: (contact) => dispatch(contactsOperations.addContact(contact)),\n  deleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n"],"sourceRoot":""}